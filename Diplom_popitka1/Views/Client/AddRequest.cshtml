@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using Newtonsoft.Json
@{
    var serializedClient = Context.Session.GetString("ClientLogin");
    var loginClient = serializedClient != null ? JsonConvert.DeserializeObject<Clients>(serializedClient) : null;
    var serializedMoto = Context.Session.GetString("MyMotorcycles");
    var motoList = serializedMoto != null ? JsonConvert.DeserializeObject<List<MotorcyclesToClient>>(serializedMoto) : null;
    var serializedPlaces = Context.Session.GetString("PlacesOfFailure");
    var places = serializedPlaces != null ? JsonConvert.DeserializeObject<List<Places>>(serializedPlaces) : null;

}

   <script>
    document.querySelector('img').addEventListener('click', function () {
        document.querySelector('input[type=file]').click();
    });

    const dropdown = document.querySelector('.dropdown');
    const dropdownContent = document.querySelector('.dropdown-content');

    // Создать массив для хранения выбранных значений
    const selectedValues = [];

    // Добавить обработчик событий клика для каждой плитки
    dropdownContent.querySelectorAll('.tile').forEach((tile) => {
        tile.addEventListener('click', (event) => {
            // Получить значение data-value плитки
            const value = event.target.getAttribute('data-value');
            const name = tile.querySelector('img').getAttribute('title');
            // Если чекбокс уже установлен, снимите его и удалите значение из массива
            if (tile.querySelector('input[type=checkbox]').checked) {
                tile.querySelector('input[type=checkbox]').checked = false;
                selectedValues.splice(selectedValues.indexOf(name), 1);
            }
            // В противном случае установите флажок и добавьте значение в массив
            else {
                tile.querySelector('input[type=checkbox]').checked = true;
                selectedValues.push(name);
            }
        });
    });

    // Отправить выбранные значения в контроллер при отправке формы
    const form = document.querySelector('form[name="myForm"]');
    form.addEventListener('submit', (event) => {
        // Предотвратить отправку формы по умолчанию
        event.preventDefault();

        // Создать строку с именами выбранных мест
        const selectedNames = selectedValues.map(item => item.name).join(', ');

        // Установить скрытое поле ввода со значениями data-value
        const inputValues = document.createElement('input');
        inputValues.type = 'hidden';
        inputValues.name = 'selectedValues';
        inputValues.value = selectedValues.map(item => item.value).join(',');
        form.appendChild(inputValues);

        // Установить скрытое поле ввода со строкой имен
        const inputNames = document.createElement('input');
        inputNames.type = 'hidden';
        inputNames.name = 'selectedNames';
        inputNames.value = selectedNames;
        form.appendChild(inputNames);

        // Отправить форму
        form.submit();
    });
   </script>
<style>
    .mcontainer {
        position: relative;
        text-align: left;
        color: white;
    }

    form {
        width: 90%;
        margin: 20px 40px;
    }

    label {
        display: block;
        margin-bottom: 10px;
        color: black;
    }

    .tab1 {
        width: 100%;
    }

    select {
        width: 100%;
        padding: 10px;
        border: 1px solid black;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    textarea {
        resize: vertical;
        width: 100%;
        height: 150px;
        padding: 10px;
        border: 1px solid black;
        border-radius: 5px;
        margin-bottom: 20px;
    }

    .signatures {
        margin-top: 40px;
        text-align: right;
    }

        .signatures p {
            margin: 0;
        }

    .btn1 {
        background: #F98404;
        border-radius: 35px;
        font-weight: bold;
        margin: 10px;
    }

    
</style>
<div class="mcontainer">
    <div class="header-container">
    <h2>Заявки</h2>
    <button type="button" class="btn btn-primary" onclick="location.href = '@Url.Action("HistoryRequests", "Client")'">История</button>
    </div>
    <form action="@Url.Action("AddRequest","Client")" method="post" name="myForm" enctype="multipart/form-data">
        <table class="tab1">
            <tr>
                <td>
                    <label for="fullname">Ваш мотоцикл:</label>
                </td>
                <td>
                   
                    <select name="moto">
                        @foreach (var mot in motoList)
                        {
                            <option value="@mot.IdMotoCl">@mot.Model</option>
                        }
                    </select>
                    
                </td>
            </tr>
            <tr>
                <td>
                    <label for="fullname">Опишите проблему:</label>
                </td>
                <td>
                    <textarea rows="5" cols="30" name="problem" id="problem" required></textarea>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="dropdown">
                        <button id="btn_place">Можете указать где именно поломка?</button>
                        
                        <div class="dropdown-content">
                            @foreach (var place in places)
                            {
                                var base64 = Convert.ToBase64String(place.Photo);
                                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                <a href="#" class="tile" data-value="@place.IdPlace">
                                    <img src="@imgSrc" alt="@place.Name" title="@place.Name" data-name="@place.Name">
                                    <input type="checkbox" name="places" value="@place.IdPlace">
                                </a>
                            }
                           
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <input type="file" id="photo" name="photo" style="display: none;" />
                    <img style="width: 70px; height: 70px;margin-top:20px;" onclick="document.querySelector('input[type=file]').click();" src="/images/photofile.png" />
                </td>
            </tr>
        </table>
        <style>
            body {
                font-family: Arial, sans-serif;
            }

            .dropdown {
                position: relative;
                display: inline-block;
                width:100%;
            }

            #btn_place{
                width: 100%;
            }
            .dropdown-content {
                display: none;
                position: absolute;
                background-color: gray;
                box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
                z-index: 1;
                width: 100%; /* Ширина контейнера для плиток 300 */
                overflow-y: scroll;
                max-height: 200px;
                margin-bottom:20px;
            }

                .dropdown-content .tile {
                    display: inline-block;
                    width: 30%; /* Ширина каждой плитки */
                    padding: 10px;
                    text-decoration: none;
                    color: black;
                    box-sizing: border-box;
                }

                    .dropdown-content .tile img {
                        width: 100%;
                        height: auto;
                    }

            .dropdown:hover .dropdown-content {
                display: block;
            }

            .dropdown-content .tile img:hover {
                cursor: pointer; /* Указываем, что курсор должен быть в виде указателя */
            }

            .dropdown-content .tile img[title]:hover::after {
                content: attr(title); /* Отображаем текст из атрибута title */
                position: absolute;
                top: 100%;
                left: 50%;
                transform: translateX(-50%);
                background-color: #f9f9f9; /* Цвет фона подсказки */
                border: 1px solid #ccc; /* Граница подсказки */
                padding: 5px 10px; /* Отступы подсказки */
                border-radius: 5px; /* Скругление углов подсказки */
                z-index: 10; /* Указываем, что подсказка должна быть сверху */
            }
        </style>

        <button type="submit" name="submit" class="btn1">Подать заявку</button>
    </form>


</div>

<style>
    .header-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px;
        position: relative;
    }

    .header-title {
        margin: 0;
    }
    .btn-primary {
        position: absolute;
        right: 0;
        background-color: #F98404;
        color: black;
    }
</style>
